.skills {
  @include container($max-width: 80em);
  @include clearfix;
  grid-column: about-start / about-end;

  @include mq-l {
    grid-column: img-end / about-end;
  }

  &__list {
    @include sans-serif($fs: 1.2rem, $ff: $ff-main, $color: $base);
    font-weight: bold;
    list-style: none;
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;

    ul {
      list-style: none;
    }

    &--item {
      position: relative; // For positioning bar pseudo elements
      height: 60px;
      margin: 2.5rem 0 0 0;
      width: 90%;

      &:before,
      &:after {
        content: "";
        position: absolute;
        border-radius: 20px;
        margin-top: 2rem;
      }

      &:before {
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        height: 20px;
        background: $base;
      }

      &:after {
        background-color: $accent;
        background: repeating-linear-gradient(-45deg, $accent, $accent 10px, lighten($accent, 3) 10px, lighten($accent, 3) 20px);
        height: 16px;
        top: 2px;
        left: 2px;
        animation: fill 2s both;
      }

      // Setting the skills levels
      &[aria-label="novice"]:after {
        right: 75%;
      }
      &[aria-label="improve"]:after {
        right: 65%;
      }
      &[aria-label="average"]:after {
        right: 50%;
      }
      &[aria-label="adept"]:after {
        right: 35%;
      }
      &[aria-label="advanced"]:after {
        right: 20%;
      }
      &[aria-label="elite"]:after {
        right: 10%;
      }
      &[aria-label="pro"]:after {
        right: 2px;
      }
    }
  }

  @supports (display: grid) {
    // Define the grid of the about me section. The use of 'start' and 'end' to ensure elements can be desirably placed.
    .skills {
      display: grid;
      // Names are assigned to the lines of the grid, see square brackets. The use of name lines allows line-based placement for redefining the grid.
      grid-template-columns: [about-start] minmax(15em, 1fr) [title-start] minmax(6em, 1fr) [img-end] 2fr [about-end];
      grid-column-gap: 0.75em;
      grid-column: about-start / about-end;

      // Defining the placement of the about title ensuring the placement overlaps the imgage.
      &--title {
        grid-column: about-start / about-end;
        grid-row: 1 / 2;
        margin-top: 0;
        color: $base;
        margin-bottom: 1rem;

        &::after {
          content: "";
          position: absolute;
          top: 100%;
          left: 0;
          height: 0.1em;
          width: 10%;
          background: $accent;
          z-index: -1;
        }

        @include mq {
          margin-top: 0.5em;
          grid-row: 1 / 2;
          position: relative;
          margin-bottom: 0;
        }

        @include mq-xl {
          &::before {
            content: "01";
            position: absolute;
            bottom: -20rem;
            right: 90rem;
            font-size: 10rem;
            z-index: -1;
            opacity: 0.05;
          }
        }
      }

      // Ensure that the subtitle flows beneath the image and the content of the section occupies the full width. Small screens only.
      &--sub,
      &--text {
        grid-column: about-start / about-end;

        // The subtitle and content will positon next to the image on larger screens.
        @include mq {
          grid-row: 2 / 4;
          grid-column: about-start / about-end;
        }

        @include mq-l {
          grid-row: 2 / 4;
          grid-column: about-start / img-end;
        }

        // &::after {
        //   content: "Creativity Connected";
        //   position: absolute;
        //   top: 0;
        //   left: 0;
        //   opacity: 0.04;
        //   font-size: 20rem;
        //   // transform: rotate(-90deg);
        //   line-height: 1;
        //   font-family: $ff-title;
        //   max-width: 100%;
        //   text-align: center;
        // }
      }

      &--text {
        @include mq {
          margin-top: 2rem;
        }
      }
    }
  }
}

@for $i from 1 through 1 {
  &:nth-child(#{$i}):after {
    animation: animation-delay(#{$i * 1.5}s);
  }
}

@keyframes fill {
  from {
    right: 100%;
  }
}
